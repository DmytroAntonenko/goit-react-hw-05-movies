{"version":3,"file":"static/js/133.a39cd876.chunk.js","mappings":"6MA+BA,EA1BmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACCF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,gBAAIC,UAAU,YAAd,WACE,SAAC,MAAD,CAAgBA,UAAU,YAAYC,KAAM,MAC5C,SAAC,KAAD,CAASC,GAAI,CAAEC,SAAS,WAAD,OAAaL,GAAMM,MAAO,CAAEC,KAAMV,IAAzD,SACGI,MAH0BD,EADrB,KAUf,C,yKCkBD,EAhCkB,SAAC,GAAkB,IAAhBQ,EAAe,EAAfA,SACnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAiBA,OACE,mBAAQT,UAAU,YAAlB,UACA,kBAAMA,UAAU,aAAaM,SAfV,SAAAI,GACnB,IAAMC,EAAaD,EAAME,cACrBF,EAAMG,iBACe,KAAlBL,EAAOM,QAMVR,EAASE,GACTG,EAAWI,SALTC,EAAAA,GAAAA,QAAc,4EAMjB,EAIH,WACE,kBAAOhB,UAAU,mBAAmBiB,KAAK,OAAOC,KAAK,OAAQC,SAlB5C,SAAAT,GAAK,OAAID,EAAUC,EAAME,cAAcQ,MAAlC,KAmBtB,mBAAQH,KAAK,SAASjB,UAAU,oBAAhC,UAAoD,SAAC,MAAD,CAAaC,KAAM,WAI5E,E,SCYD,EAnCe,WAAO,IAAD,EACnB,GAAwCoB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAe8B,EAAf,KACMC,EAAS,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,IAE/CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,gGAETH,EAFS,kEAKUI,EAAAA,EAAAA,IAAkBJ,GAL5B,OAKRG,EALQ,OAMdJ,EAAUI,GACe,IAArBA,EAAUE,QACZd,EAAAA,GAAAA,QAAc,qPARF,kDAWdA,EAAAA,GAAAA,QAAc,qPAXA,0DAAH,qDAcfY,GACD,GAAE,CAACH,EAAWD,IAKf,OACE,iBAAKxB,UAAU,mBAAf,WACE,SAAC,EAAD,CAAWM,SALW,SAAAY,GACxBK,EAAgB,CAAEQ,MAAOb,GAC1B,KAIG,SAAC,IAAD,CAAYxB,OAAQA,MAIzB,C","sources":["components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { BiCameraMovie } from 'react-icons/bi';\nimport { NavLink, useLocation } from 'react-router-dom';\n\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n    {movies.map(({ id, title }) => (\n      <li className=\"MovieItem\" key={id}>\n        <BiCameraMovie  className=\"MovieIcon\" size={32} />\n        <NavLink to={{ pathname: `/movies/${id}`, state: { from: location } }}>\n          {title}\n        </NavLink>\n      </li>\n    ))}\n  </ul> \n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { BiSearchAlt } from 'react-icons/bi';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleChange = event => setSearch(event.currentTarget.value);\n  \n  const handleSubmit = event => {\n    const formSearch = event.currentTarget;\n        event.preventDefault();\n        if(search.trim() === '') {\n          \n          toast.warning(\"Введіть пошук\");\n          return;\n        }\n    \n        onSubmit(search);\n        formSearch.reset();\n      };\n\n  return (\n    <header className=\"Searchbar\">\n    <form className=\"SearchForm\" onSubmit={handleSubmit}>\n      <input className=\"SearchForm-input\" type=\"text\" name=\"name\"  onChange={handleChange} />\n      <button type=\"submit\" className=\"SearchForm-button\"><BiSearchAlt size={32} /></button>\n    </form>\n     </header>\n  );\n};\n\nSearchBar.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n\nexport default SearchBar;","import { fetchSearchMovies} from 'services/Api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport SearchBar from 'components/SearchBar';\nimport MoviesList from 'components/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        if (!movieName) {\n          return;\n        }\n        const getMovies = await fetchSearchMovies(movieName);\n        setMovies(getMovies);\n        if (getMovies.length === 0) {\n          toast.warning(\"Нічого не знайдено. Введіть коректне значення!\");\n        }\n      } catch {\n        toast.warning(\"Нічого не знайдено. Введіть коректне значення!\");\n      }\n    };\n    getMovies();\n  }, [movieName, setMovies]);\n\n  const handleChangeQuery = name => {\n    setSearchParams({ query: name });\n  };\n  return (\n    <div className=\"MainSearchMovies\">\n      <SearchBar onSubmit={handleChangeQuery} />\n      <MoviesList movies={movies} />\n      \n    </div>\n  );\n};\n\nexport default Movies;"],"names":["movies","location","useLocation","map","id","title","className","size","to","pathname","state","from","onSubmit","useState","search","setSearch","event","formSearch","currentTarget","preventDefault","trim","reset","toast","type","name","onChange","value","useSearchParams","searchParams","setSearchParams","setMovies","movieName","get","useEffect","getMovies","fetchSearchMovies","length","query"],"sourceRoot":""}